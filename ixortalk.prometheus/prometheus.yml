# my global config
global:
  scrape_interval:     15s # By default, scrape targets every 15 seconds.
  evaluation_interval: 15s # By default, scrape targets every 15 seconds.
  # scrape_timeout is set to the global default (10s).

  # Attach these labels to any time series or alerts when communicating with
  # external systems (federation, remote storage, Alertmanager).
  external_labels:
      monitor: 'codelab-monitor'

# Load and evaluate rules in this file every 'evaluation_interval' seconds.
rule_files:
  - "alert.rules.yml"
  - "recording.rules.yml"

# Alertmanager
alerting:
  alertmanagers:
  - path_prefix: /alertmanager
    scheme: https
    static_configs:
    - targets:
      - ${ixortalk.loadbalancer.internal.host}:${ixortalk.loadbalancer.internal.port}

# A scrape configuration containing exactly one endpoint to scrape:
# Here it's Prometheus itself.
scrape_configs:
  - job_name: 'Assets'

    metrics_path: '/prometheus'

    scheme: ${ixortalk.loadbalancer.internal.protocol}

    scrape_interval: 5s

    relabel_configs:
      - regex: .*Password
        action: labeldrop

    file_sd_configs:
      - files: ['/assets/assets.yml']
        refresh_interval: 1m

  - job_name: 'IxorTalk Spring Boot services'

    scheme: ${ixortalk.loadbalancer.internal.protocol}
    scrape_interval: 5s

    static_configs:
      - targets: ['${ixortalk.loadbalancer.internal.host}:${ixortalk.loadbalancer.internal.port}']
        labels:
          group: 'Spring boot metrics'
          name: 'ixortalk-configserver'
          prometheus_url: '${ixortalk.server.configserver.context-path}/actuator/prometheus'
      - targets: ['${ixortalk.loadbalancer.internal.host}:${ixortalk.loadbalancer.internal.port}']
        labels:
          group: 'Spring boot metrics'
          name: 'ixortalk-assetmgmt'
          prometheus_url: '${ixortalk.server.assetmgmt.context-path}/actuator/prometheus_metrics'
      - targets: ['${ixortalk.loadbalancer.internal.host}:${ixortalk.loadbalancer.internal.port}']
        labels:
            group: 'Spring boot metrics'
            name: 'ixortalk-mailing-service'
            prometheus_url: '${ixortalk.server.mailing-service.context-path}/actuator/prometheus_metrics'
      - targets: ['${ixortalk.loadbalancer.internal.host}:${ixortalk.loadbalancer.internal.port}']
        labels:
          group: 'Spring boot metrics'
          name: 'ixortalk-authserver'
          prometheus_url: '${ixortalk.server.authserver.context-path}/actuator/prometheus_metrics'

    relabel_configs:
      - source_labels: [prometheus_url]
        action: replace
        target_label: __metrics_path__
        regex: (.+)

  - job_name: 'IxorTalk Spring Boot services Health'

    scheme: ${ixortalk.loadbalancer.internal.protocol}

    params:
      module: [http_2xx]  # Look for a HTTP 200 response.

    static_configs:
    - targets: ['${ixortalk.server.configserver.url}/actuator/health']
      labels:
        group: 'Spring boot health'
        name: 'ixortalk-config-server health'
        prometheus_url: '${ixortalk.server.prometheus-support.context-path}${ixortalk.server.blackbox-exporter.context-path}/probe'
    - targets: ['${ixortalk.server.assetmgmt.url}/actuator/health']
      labels:
        group: 'Spring boot health'
        name: 'ixortalk-assetmgmt health'
        prometheus_url: '${ixortalk.server.prometheus-support.context-path}${ixortalk.server.blackbox-exporter.context-path}/probe'
    - targets: ['${ixortalk.server.authserver.url}/actuator/health']
      labels:
        group: 'Spring boot health'
        name: 'ixortalk-authserver health'
        prometheus_url: '${ixortalk.server.prometheus-support.context-path}${ixortalk.server.blackbox-exporter.context-path}/probe'
    ##    TODO: gateway is linked to external loadbalancer (can only be one) and hence we cannot make it available
    #      - targets: ['${ixortalk.server.gateway.url}actuator/health']
    #        labels:
    #            group: 'Spring boot health'
    #            name: 'ixortalk-gateway health'
    #            prometheus_url: '${ixortalk.server.prometheus-support.context-path}${ixortalk.server.blackbox-exporter.context-path}/probe'
    - targets: ['${ixortalk.server.control-api.url}/actuator/health']
      labels:
        group: 'Spring boot health'
        name: 'ixortalk-udini-control-api health'
        prometheus_url: '${ixortalk.server.prometheus-support.context-path}${ixortalk.server.blackbox-exporter.context-path}/probe'
    - targets: ['${ixortalk.server.mailing-service.url}/actuator/health']
      labels:
        group: 'Spring boot health'
        name: 'ixortalk-mailing-service health'
        prometheus_url: '${ixortalk.server.prometheus-support.context-path}${ixortalk.server.blackbox-exporter.context-path}/probe'

    relabel_configs:
      - source_labels: ['__address__']
        target_label: __param_target
      - source_labels: ['__param_target']
        target_label: instance
      - target_label: __address__
        replacement: ${ixortalk.loadbalancer.internal.host}:${ixortalk.server.blackbox-exporter.port}
      - source_labels: [prometheus_url]
        action: replace
        target_label: __metrics_path__
        regex: (.+)

  - job_name: 'Blackbox HTTP'

    scheme: ${ixortalk.loadbalancer.internal.protocol}

    metrics_path: /probe

    params:
       module: [http_2xx]  # Look for a HTTP 200 response.

    static_configs:
      - targets: ['${ixortalk.server.assetmgmt-ui.url}/health']
        labels:
          group: 'UI Dockers'
          name: 'AssetMgmt UI'
          prometheus_url: '${ixortalk.server.prometheus-support.context-path}${ixortalk.server.blackbox-exporter.context-path}/probe'
      - targets: ['${ixortalk.server.user-registration-ui.url}/health']
        labels:
          group: 'UI Dockers'
          name: 'User Registration UI'
          prometheus_url: '${ixortalk.server.prometheus-support.context-path}${ixortalk.server.blackbox-exporter.context-path}/probe'

    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: ${ixortalk.loadbalancer.internal.host}:${ixortalk.server.blackbox-exporter.port}
      - source_labels: [prometheus_url]
        action: replace
        target_label: __metrics_path__
        regex: (.+)

  - job_name: 'CAdvisor Monitoring'

    metrics_path: '/prometheus-support/cadvisor/metrics'

    scrape_interval: 5s

    scheme: ${ixortalk.loadbalancer.internal.protocol}

    static_configs:
      - targets: ['${ixortalk.loadbalancer.internal.host}:${ixortalk.loadbalancer.internal.port}']
        labels:
          group: 'Monitoring dockers'
          name: 'cAdvisor'

  - job_name: 'Node Exporter Monitoring'

    metrics_path: '/prometheus-support/node-exporter/metrics'

    scrape_interval: 5s

    scheme: ${ixortalk.loadbalancer.internal.protocol}

    static_configs:
      - targets: ['${ixortalk.loadbalancer.internal.host}:${ixortalk.loadbalancer.internal.port}']
        labels:
          group: 'Monitoring dockers'
          name: 'node-exporter'


  - job_name: 'Prometheus'

    metrics_path: '/prometheus/metrics'

    scrape_interval: 5s

    scheme: ${ixortalk.loadbalancer.internal.protocol}

    static_configs:
      - targets: ['${ixortalk.loadbalancer.internal.host}:${ixortalk.loadbalancer.internal.port}']
        labels:
          group: 'Monitoring dockers'
          name: 'Prometheus'
